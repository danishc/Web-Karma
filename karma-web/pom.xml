<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>

    <parent>
        <groupId>edu.isi</groupId>
        <artifactId>karma-common-web</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../karma-common-web</relativePath>
    </parent>

    <artifactId>karma-web</artifactId>

    <dependencies>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>de.micromata.jak</groupId>
            <artifactId>JavaAPIforKml</artifactId>
        </dependency>

    </dependencies>


    <profiles>
        <profile>
            <id>jetty-deploy</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>

                <plugins>
                    <!-- Configuration for Jetty -->
                    <plugin>
                        <groupId>org.eclipse.jetty</groupId>
                        <artifactId>jetty-maven-plugin</artifactId>
                        <version>${jettyVersion}</version>
                        <configuration>
                            <argLine>-XX:MaxPermSize=256m</argLine>
                            <systemProperties>
                                <systemProperty>
                                    <name>log4j.configuration</name>
                                    <value>log4j.properties</value>
                                </systemProperty>
                            </systemProperties>
                            <webApp>
                                <contextPath>/</contextPath>
                            </webApp>
                            <connectors>
                                <!-- work around file locking on windows -->
                                <connector implementation="org.eclipse.jetty.server.bio.SocketConnector">
                                    <port>8080</port>
                                    <!-- this connector defaults to 1300 for some reason -->
                                </connector>
                            </connectors>
                            <contextHandlers>
                                <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
                                    <war>${project.basedir}/external_webapps/openrdf-workbench.war</war>
                                    <contextPath>/openrdf-workbench</contextPath>
                                </contextHandler>
                                <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
                                    <war>${project.basedir}/external_webapps/openrdf-sesame.war</war>
                                    <contextPath>/openrdf-sesame</contextPath>
                                </contextHandler>
                                <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
                                    <war>${project.basedir}/external_webapps/cleaningService.war</war>
                                    <contextPath>/cleaningService</contextPath>
                                </contextHandler>
                                <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
                                    <war>${project.basedir}/external_webapps/cluster-1.0.war</war>
                                    <contextPath>/clusterService</contextPath>
                                </contextHandler>
                            </contextHandlers>

                        </configuration>


                    </plugin>
                </plugins>
            </build>

        </profile>

        <profile>
            <!--  embedded tomcat deploy -->
            <!--  from project directory run $mvn clean install -->
            <!--  from karma-web directory run $mvn package -->
            <!--  from karma-web directory run $mvn -Pemb-tomcat-deploy cargo:run -->
            <id>emb-tomcat-deploy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <version>1.9.8</version>
                        <configuration>
                            <container>
                                <containerId>tomcat9x</containerId>
                                <zipUrlInstaller>
                                    <url>https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/9.0.54/tomcat-9.0.54.zip</url>
                                </zipUrlInstaller>
                                <type>embedded</type>
                            </container>
                            <configuration>
                                <type>standalone</type>
                                <properties>
                                    <cargo.servlet.port>8080</cargo.servlet.port>
                                </properties>
                            </configuration>
                            <deployables>
                                <deployable>
                                    <type>war</type>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.war</location>
                                    <properties>
                                        <context>/</context>
                                    </properties>
                                </deployable>
                                <deployable>
                                    <type>war</type>
                                    <location>${project.basedir}/external_webapps/openrdf-workbench.war</location>
                                    <properties>
                                        <context>/openrdf-workbench</context>
                                    </properties>
                                </deployable>
                                <deployable>
                                    <type>war</type>
                                    <location>${project.basedir}/external_webapps/openrdf-sesame.war</location>
                                    <properties>
                                        <context>/openrdf-sesame</context>
                                    </properties>
                                </deployable>
                                <deployable>
                                    <type>war</type>
                                    <location>${project.basedir}/external_webapps/cleaningService.war</location>
                                    <properties>
                                        <context>/cleaningService</context>
                                    </properties>
                                </deployable>
                                <deployable>
                                    <type>war</type>
                                    <location>${project.basedir}/external_webapps/cluster-1.0.war</location>
                                    <properties>
                                        <context>/clusterService</context>
                                    </properties>
                                </deployable>
                            </deployables>
                            <executions>
                                <execution>
                                    <id>start</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>start</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>stop</id>
                                    <phase>post-integration-test</phase>
                                    <goals>
                                        <goal>stop</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomcat-deploy</id>
            <build>
                <plugins>
                    <!-- Configuration for Tomcat -->
                    <!--
                    For Tomcat, add the following roles and user to the conf/tomcat-users.xml file as follows
                    <role rolename="manager-gui"/>
                   <role rolename="manager-script"/>
                   <user username="myusername" password="mypassword" roles="manager-gui,manager-script"/>
                  Start (or restart) your Tomcat instance to pick up the user configuration changes
                  Add a corresponding server block to your $M2_HOME/conf/settings.xml:
                  <server>
                      <id>TomcatServer</id>
                      <username>myusername</username>
                      <password>mypassword</password>
                  </server>
                  Set the tomcat url, port and path settings and then run

                  mvn package -Ptomcat-deploy tomcat:deploy

                  from the Web-Karma folder
                  to deploy WAR in the tomcat container
                    -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>tomcat-maven-plugin</artifactId>
                        <version>1.1</version>
                        <configuration>
                            <argLine>-XX:MaxPermSize=128m</argLine>
                            <server>TomcatServer</server>
                            <path>/</path>
                            <url>http://localhost:8080/manager/text</url>
                            <update>true</update>
                        </configuration>

                        <executions>
                            <execution>
                                <id>cleaningService</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <server>TomcatServer</server>
                                    <path>/cleaningService</path>
                                    <url>http://localhost:8080/manager/text</url>
                                    <warFile>${project.basedir}/external_webapps/cleaningService.war</warFile>
                                    <update>true</update>
                                </configuration>
                            </execution>
                            <execution>
                                <id>clusterService</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <server>TomcatServer</server>
                                    <path>/clusterService</path>
                                    <url>http://localhost:8080/manager/text</url>
                                    <warFile>${project.basedir}/external_webapps/cluster-1.0.war</warFile>
                                    <update>true</update>
                                </configuration>
                            </execution>
                            <execution>
                                <id>openrdfworkbench</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <server>TomcatServer</server>
                                    <path>/openrdf-workbench</path>
                                    <url>http://localhost:8080/manager/text</url>
                                    <warFile>${project.basedir}/external_webapps/openrdf-workbench.war</warFile>
                                    <update>true</update>
                                </configuration>
                            </execution>
                            <execution>
                                <id>openrdfsesame</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <server>TomcatServer</server>
                                    <path>/openrdf-sesame</path>
                                    <url>http://localhost:8080/manager/text</url>
                                    <warFile>${project.basedir}/external_webapps/openrdf-sesame.war</warFile>
                                    <update>true</update>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>